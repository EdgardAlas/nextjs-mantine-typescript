{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "plugin:@typescript-eslint/recommended"
  ],
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "rules": {
    "no-console": "warn",
    "dot-notation": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "no-else-return": "error",
    "no-floating-decimal": "error",
    "no-unneeded-ternary": "error",
    "no-lonely-if": "error",
    "one-var-declaration-per-line": "error",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["PascalCase", "UPPER_CASE"],
        "types": ["boolean"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "variableLike",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },

      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ]
  },
  "ignorePatterns": ["next.config.js", "next-sitemap.config.js"]
}
